context:
  version: "1.28.1"
  python_min: '3.9'

# Note: This recipe is specifically designed to work well with the autotick bot.
# Also refer to https://github.com/conda-forge/rust-feedstock/blob/main/recipe/meta.yaml.
package:
  name: ${{ polars_variant }}
  version: ${{ version }}

source:
  - if: polars_variant == 'polars'
    then:
      url: https://pypi.org/packages/source/p/polars/polars-${{ version }}.tar.gz
      sha256: cdc0a62a1452e2daf1777e36fcf9351424cba2a588827cc32550fe0fa79dec82
  - if: polars_variant == 'polars-lts-cpu'
    then:
      url: https://pypi.org/packages/source/p/polars-lts-cpu/polars_lts_cpu-${{ version }}.tar.gz
      sha256: 701cde57af879ae8da5c1123a23adf311cf69255828532c9c6bcc2ecb9a14792
  - if: polars_variant == 'polars-u64-idx'
    then:
      url: https://pypi.org/packages/source/p/polars-u64-idx/polars_u64_idx-${{ version }}.tar.gz
      sha256: e1d35ff5c8eb25f81a8eeab96a6b38ac2d507f6f59bcb5225e8a39684e6263b6

build:
  number: 0
  skip: not (match(python, python_min ~ ".*") and is_abi3 == 'true')
  python:
    version_independent: true

requirements:
  build:
    - if: build_platform != target_platform
      then:
        - python
        - cross-python_${{ target_platform }}
        - crossenv
        - maturin >=1.3.2,<2
    - ${{ compiler('c') }}
    - ${{ compiler('cxx') }}
    - ${{ stdlib('c') }}
    - ${{ compiler('rust') }}
    - if: build_platform == 'win-64'
      then:
        - posix
    - cmake
    - if: unix
      then:
        - make
    - cargo-bundle-licenses
  host:
    - python
    - python-abi3
    - pip
    - maturin >=1.3.2,<2
  run:
    - python
    - numpy >=1.16.0
    - if: python <3.11
      then:
        - typing_extensions >=4.0.0
    - if: python >=3.10
      then:
        - packaging
  ignore_run_exports:
    from_package:
      - cross-python_${{ target_platform }}

tests:
  - python:
      pip_check: true
      imports:
        - polars
      python_version: ${{ python_min }}
  - script:
      - python -c "from polars import DataFrame"
  - package_contents:
      site_packages:
        - if: unix
          then: polars/polars.abi3.so
          else: polars/polars.pyd
        - polars/dataframe/__init__.py
        - ${{ polars_variant | replace('-', '_') }}-${{ version }}.dist-info/*

about:
  homepage: https://github.com/pola-rs/polars
  license: MIT
  license_file:
    - LICENSE
    - THIRDPARTY.yml
  summary: Dataframes powered by a multithreaded, vectorized query engine, written in Rust
  description: Polars is a DataFrame interface on top of an OLAP Query Engine implemented in Rust using Apache Arrow Columnar Format as the memory model.
  documentation: https://docs.pola.rs
  repository: https://github.com/pola-rs/polars

extra:
  recipe-maintainers:
    - borchero
    - Maxyme
    - timkpaine
    - ritchie46
    - sugatoray
    - xhochy
    - dhirschfeld
    - pavelzw
    - '0xbe7a'
