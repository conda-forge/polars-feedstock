context:
  version: "1.31.0"
  python_min: "3.9"
  build_number: 1

recipe:
  name: polars
  version: ${{ version }}

# Note: This recipe is specifically designed to work well with the autotick bot.
# Also refer to https://github.com/conda-forge/rust-feedstock/blob/main/recipe/meta.yaml.
source:
  - if: polars_variant == 'default'
    then:
      url: https://pypi.org/packages/source/p/polars/polars-${{ version }}.tar.gz
      sha256: 59a88054a5fc0135386268ceefdbb6a6cc012d21b5b44fed4f1d3faabbdcbf32
  - if: polars_variant == 'lts-cpu'
    then:
      url: https://pypi.org/packages/source/p/polars-lts-cpu/polars_lts_cpu-${{ version }}.tar.gz
      sha256: 574a7b077aa5f71add4a099d491a28b31e9ec72e020b27b1c9731fc9a638280a
  - if: polars_variant == 'u64-idx'
    then:
      url: https://pypi.org/packages/source/p/polars-u64-idx/polars_u64_idx-${{ version }}.tar.gz
      sha256: 09d5527a4a57ed305b29b05d7681d7bd83ab03e3dd83a565aa0aa1f711129e06

build:
  number: ${{ build_number }}

outputs:
  - package:
      name: polars
    build:
      script: echo "No build step is needed"
      string: ${{ polars_variant | replace('-', '_') }}_h${{ hash }}_${{ build_number }}
      variant:
        down_prioritize_variant: ${{ 0 if polars_variant == 'default' else 1 }}
      # otherwise conda-smithy will create incorrect variant files
      skip: not (match(python, python_min ~ ".*") and is_abi3)
    requirements:
      run:
        - ${{ pin_subpackage('polars-' ~ polars_variant, exact=true) }}
    tests:
      - python:
          pip_check: true
          imports:
            - polars
          python_version: ${{ python_min }}.*
      - script:
          - python -c "from polars import DataFrame"
    about:
      license_file: []
  - package:
      name: polars-${{ polars_variant }}
    build:
      skip: not (match(python, python_min ~ ".*") and is_abi3)
      python:
        version_independent: true
    requirements:
      build:
        - if: build_platform != target_platform
          then:
            - python
            - cross-python_${{ target_platform }}
            - crossenv
            - maturin >=1.3.2,<2
        - ${{ compiler('c') }}
        - ${{ compiler('cxx') }}
        - ${{ stdlib('c') }}
        - ${{ compiler('rust') }}
        - if: build_platform == 'win-64'
          then:
            - posix
        - cmake
        - if: unix
          then:
            - make
        - cargo-bundle-licenses
      host:
        - python
        - python-abi3
        - pip
        - maturin >=1.3.2,<2
      run:
        - python
      run_constraints:
        - numpy >=1.16.0
        - pyarrow >=7.0.0
        - fastexcel >=0.9
        - openpyxl >=3.0.0
        - xlsx2csv >=0.8.0
        - connectorx >=0.3.2
        - deltalake >=1.0.0
        - pyiceberg >=0.7.1
        - altair >=5.4.0
        - great_tables >=0.8.0
      ignore_run_exports:
        from_package:
          - cross-python_${{ target_platform }}

    tests:
      - python:
          pip_check: true
          imports:
            - polars
          python_version: ${{ python_min }}.*
      - script:
          - python -c "from polars import DataFrame"
      - package_contents:
          site_packages:
            - if: unix
              then: polars/polars.abi3.so
              else: polars/polars.pyd
            - polars/dataframe/__init__.py
            - polars${{ ('_' ~ polars_variant) | replace('_default', '') | replace('-', '_') }}-${{ version }}.dist-info/*

about:
  homepage: https://github.com/pola-rs/polars
  license: MIT
  license_file:
    - LICENSE
    - THIRDPARTY.yml
  summary: Dataframes powered by a multithreaded, vectorized query engine, written in Rust
  description: Polars is a DataFrame interface on top of an OLAP Query Engine implemented in Rust using Apache Arrow Columnar Format as the memory model.
  documentation: https://docs.pola.rs
  repository: https://github.com/pola-rs/polars

extra:
  recipe-maintainers:
    - borchero
    - Maxyme
    - timkpaine
    - ritchie46
    - sugatoray
    - xhochy
    - dhirschfeld
    - pavelzw
    - "0xbe7a"
