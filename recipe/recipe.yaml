context:
  version: "1.29.0"
  python_min: '3.9'

# Note: This recipe is specifically designed to work well with the autotick bot.
# Also refer to https://github.com/conda-forge/rust-feedstock/blob/main/recipe/meta.yaml.
package:
  name: ${{ polars_variant }}
  version: ${{ version }}

source:
  - if: polars_variant == 'polars'
    then:
      url: https://pypi.org/packages/source/p/polars/polars-${{ version }}.tar.gz
      sha256: d2acb71fce1ff0ea76db5f648abd91a7a6c460fafabce9a2e8175184efa00d02
      # https://github.com/prefix-dev/rattler-build/issues/1000
      # patches:
      #   - if: target_platform == 'linux-64' or target_platform == 'win-64'
      #     then: cargo-use-argminmax-fork.patch
  - if: polars_variant == 'polars-lts-cpu'
    then:
      url: https://pypi.org/packages/source/p/polars-lts-cpu/polars_lts_cpu-${{ version }}.tar.gz
      sha256: 550ad6cd436df93f4078e7f7e8f0fc0a4f4f415742361743ee18f8cff896dc39
  - if: polars_variant == 'polars-u64-idx'
    then:
      url: https://pypi.org/packages/source/p/polars-u64-idx/polars_u64_idx-${{ version }}.tar.gz
      sha256: 4f51c6095c3e229894af6ed14231240e82d3f352914ae09320a28a26dcb1fd22
  # https://github.com/jvdd/argminmax/issues/74
  # https://github.com/jvdd/argminmax/pull/73
  # https://github.com/pola-rs/polars/issues/22604
  - if: target_platform == 'linux-64' or target_platform == 'win-64' or target_platform == 'osx-64'
    then:
      url: https://github.com/jvdd/argminmax/archive/refs/tags/v0.6.2.tar.gz
      sha256: c5d115216f715b68b479a6e8e982ab5a46437b24ab04b3e319f17600454441d6
      target_directory: argminmax
      patches:
        - fix-argminmax.patch

build:
  number: 0
  skip: not (match(python, python_min ~ ".*") and is_abi3)
  python:
    version_independent: true

requirements:
  build:
    - if: build_platform != target_platform
      then:
        - python
        - cross-python_${{ target_platform }}
        - crossenv
        - maturin >=1.3.2,<2
    - ${{ compiler('c') }}
    - ${{ compiler('cxx') }}
    - ${{ stdlib('c') }}
    - ${{ compiler('rust') }}
    - if: build_platform == 'win-64'
      then:
        - posix
    - cmake
    - if: unix
      then:
        - make
    - cargo-bundle-licenses
    # TODO: remove once https://github.com/prefix-dev/rattler-build/issues/1000 is resolved
    - if: target_platform == 'linux-64' or target_platform == 'osx-64'
      then:
        - sed
    - if: target_platform == 'win-64'
      then:
        - m2-sed
  host:
    - python
    - python-abi3
    - pip
    - maturin >=1.3.2,<2
  run:
    - python
    - numpy >=1.16.0
    - if: python <3.11
      then:
        - typing_extensions >=4.0.0
    - if: python >=3.10
      then:
        - packaging
  ignore_run_exports:
    from_package:
      - cross-python_${{ target_platform }}

tests:
  - python:
      pip_check: true
      imports:
        - polars
      python_version: ${{ python_min }}.*
  - script:
      - python -c "from polars import DataFrame"
  - package_contents:
      site_packages:
        - if: unix
          then: polars/polars.abi3.so
          else: polars/polars.pyd
        - polars/dataframe/__init__.py
        - ${{ polars_variant | replace('-', '_') }}-${{ version }}.dist-info/*

about:
  homepage: https://github.com/pola-rs/polars
  license: MIT
  license_file:
    - LICENSE
    - THIRDPARTY.yml
  summary: Dataframes powered by a multithreaded, vectorized query engine, written in Rust
  description: Polars is a DataFrame interface on top of an OLAP Query Engine implemented in Rust using Apache Arrow Columnar Format as the memory model.
  documentation: https://docs.pola.rs
  repository: https://github.com/pola-rs/polars

extra:
  recipe-maintainers:
    - borchero
    - Maxyme
    - timkpaine
    - ritchie46
    - sugatoray
    - xhochy
    - dhirschfeld
    - pavelzw
    - '0xbe7a'
